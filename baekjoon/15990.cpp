#include<bits/stdc++.h>
using namespace std;

const int MAX = 100001;
const int mod = 1000000009;

long long dp[MAX][4];	// n을 1, 2, 3의 합으로 나타내는 방법의 수, 단 j는 마지막에 오는 수

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);

	for(int i=1; i<MAX; i++) {
		// 마지막 수가 1이 오는 경우
			// 마지막 수가 1이기 때문에 올 수 있는 수는 i-1 에서 마지막 수가 2 또는 3인 경우
		if(i-1>=0) {
			dp[i][1] = dp[i-1][2] + dp[i-1][3];
			if(i==1) {
				dp[i][1] = 1;
			}
		}		
		

		// 마지막 수가 2가 오는 경우
			// 마지막 수가 2이기 때문에 올 수 있는 수는 i-2 에서 마지막 수가 1 또는 3인 경우
		if(i-2>=0) {
			dp[i][2] = dp[i-2][1] + dp[i-2][3];
			if(i==2)  {
				dp[i][2] = 1;
			}
		}
		

		// 마지막 수가 3이 오는 경우	
			// 마지막 수가 3이기 때문에 올 수있는 수는 i-3를 만드는 수에서 마지막 수가 1 또는 2인 경우
		if(i-3>=0) {
			dp[i][3] = dp[i-3][1] + dp[i-3][2];
			if(i==3) {
				dp[i][3] = 1;
			}
		}

		dp[i][1] %= mod;
		dp[i][2] %= mod;
		dp[i][3] %= mod;
	}

	int t;
	cin >> t;
	while(t--) {
		int n;
		cin >> n;

		// dp n을 만드는 경우는 
		// 마지막 수가 1이 오는 경우, 마지막 수가 2가 오는 경우, 마지막 수가 3이 오는 경우 이므로 
		// 이를 합한 값이 n을 1, 2, 3으로 나타낼 수 있는 경우의 수!
		cout << (dp[n][1] + dp[n][2] +dp[n][3]) % mod <<"\n";

	}

	return 0;
}

/*	 실수

- dp 를 int 형으로 선언했음 
1. n의 범위가 100000 이므로 단순히 범위를 최대 10만 이라 생각함 
   완전 잘못된 생각이자 접근
2. n이 10만 이면 10만을 만들 수 있는 경우의 수를 생각했어야함 
   해당 범위가 int 형을 벗어나 dp를 int 로 선언시 오류
*/